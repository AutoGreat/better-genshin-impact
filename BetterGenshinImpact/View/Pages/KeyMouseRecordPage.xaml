<UserControl x:Class="BetterGenshinImpact.View.Pages.KeyMouseRecordPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:BetterGenshinImpact.View.Pages"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pages="clr-namespace:BetterGenshinImpact.ViewModel.Pages"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:controls="clr-namespace:BetterGenshinImpact.View.Controls"
             d:DataContext="{d:DesignInstance Type=pages:KeyMouseRecordPageViewModel}"
             d:DesignHeight="600"
             d:DesignWidth="800"
             ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
             ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
             FontFamily="{StaticResource TextThemeFontFamily}"
             Foreground="{DynamicResource TextFillColorPrimaryBrush}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/View/Controls/Style/ListViewEx.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="42,16,42,12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <ui:TextBlock Grid.Row="0"
                      Margin="0,0,0,8"
                      FontTypography="BodyStrong"
                      Text="键鼠录制回放功能" />
        <ui:TextBlock Grid.Row="1"
                      Margin="0,0,0,8"
                      Foreground="{ui:ThemeResource TextFillColorTertiaryBrush}"
                      TextWrapping="Wrap">
            建议在游戏内使用快捷键进行录制，
        </ui:TextBlock>

        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <ui:Button Command="{Binding OpenScriptFolderCommand}"
                       Content="打开目录"
                       Icon="{ui:SymbolIcon FolderOpen24}" />
            <Separator Width="10" Opacity="0" />
            <!--<ui:Button Command="{Binding OpenLocalScriptRepoCommand}" Icon="{ui:SymbolIcon Archive24}">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ui:TextBlock>脚本仓库</ui:TextBlock>
                    <ui:InfoBadge Margin="0,-8,-14,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Severity="Attention"
                                  Style="{DynamicResource DotInfoBadgeStyle}"
                                  Visibility="{Binding Config.ScriptConfig.ScriptRepoHintDotVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
            </ui:Button>
            <Separator Width="10" Opacity="0" />-->
            <ui:Button Command="{Binding StartRecordCommand}"
                       Content="开始录制"
                       Icon="{ui:SymbolIcon Record20}"
                       IsEnabled="{Binding IsRecording, Converter={StaticResource InverseBooleanConverter}}" />
            <Separator Width="10" Opacity="0" />
            <ui:Button Command="{Binding StopRecordCommand}"
                       Content="停止录制"
                       Icon="{ui:SymbolIcon Stop24}"
                       IsEnabled="{Binding IsRecording}" />
            <Separator Width="20" Opacity="0" />
            <ui:ToggleSwitch 
                Content="主界面切换识别"
                IsChecked="{Binding Config.RecordConfig.PaimonSwitchEnabled, Mode=TwoWay}" />
        </StackPanel>

        <Separator Grid.Row="3"
                   Height="10"
                   Opacity="0" />

        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="180" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Grid x:Name="Col1" Grid.Column="0" />
            <Grid x:Name="Col2" Grid.Column="1" />
            <Grid x:Name="Col3" Grid.Column="2" />
        </Grid>
        <ui:ListView Grid.Row="5"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch"
                     ItemsSource="{Binding ScriptItems}"
                     SelectionMode="Single">
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderDarkStyle}">
                    <GridViewColumn Width="{Binding ElementName=Col1, Path=ActualWidth}"
                                    DisplayMemberBinding="{Binding Name}"
                                    Header="名称" />
                    <GridViewColumn Width="{Binding ElementName=Col2, Path=ActualWidth}"
                                    DisplayMemberBinding="{Binding CreateTimeStr}"
                                    Header="创建时间" />
                    <GridViewColumn Width="{Binding ElementName=Col3, Path=ActualWidth}" Header="上传操作">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <ui:Button x:Name="UploadButton"
                                             Command="{Binding UploadCommand}"
                                             Content="上传"
                                             Icon="{ui:SymbolIcon CloudArrowUp24}"
                                             Visibility="{Binding IsUploading, Converter={StaticResource BooleanToVisibilityRevertConverter}}" />
                                    
                                    <ui:Button Command="{Binding StopUploadCommand}"
                                             Content="停止"
                                             Icon="{ui:SymbolIcon Stop24}"
                                             Visibility="{Binding IsUploading, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    
                                    <ui:Button Command="{Binding DeleteUploadedFilesCommand}"
                                             Content="清除"
                                             Icon="{ui:SymbolIcon Delete24}"
                                             Margin="5,0,0,0" />
                                    
                                    <ui:TextBlock Margin="5,0,0,0"
                                               VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsUploadSuccess}" Value="True">
                                                        <Setter Property="Text" Value="成功" />
                                                        <Setter Property="Foreground" Value="Green" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsUploading}" Value="True">
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <MultiBinding StringFormat="{}{0:F1}% {1}">
                                                                    <Binding Path="UploadProgress" />
                                                                    <Binding Path="UploadSpeed" />
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsUploadSuccess}" Value="False" />
                                                            <Condition Binding="{Binding UploadProgress}" Value="0" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </ui:TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <!--<MenuItem Command="{Binding EditScriptCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                              Header="修改名称" />-->
                    <MenuItem Command="{Binding DeleteScriptCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                              Header="删除" />
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListView.Style>
                <Style TargetType="{x:Type ListView}">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </ListView.Style>
        </ui:ListView>
    </Grid>
</UserControl>